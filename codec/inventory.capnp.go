// Code generated by capnpc-go. DO NOT EDIT.

package codec

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Inventory struct{ capnp.Struct }

// Inventory_TypeID is the unique identifier for the type Inventory.
const Inventory_TypeID = 0x894854b19b0bdf88

func NewInventory(s *capnp.Segment) (Inventory, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Inventory{st}, err
}

func NewRootInventory(s *capnp.Segment) (Inventory, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Inventory{st}, err
}

func ReadRootInventory(msg *capnp.Message) (Inventory, error) {
	root, err := msg.RootPtr()
	return Inventory{root.Struct()}, err
}

func (s Inventory) String() string {
	str, _ := text.Marshal(0x894854b19b0bdf88, s.Struct)
	return str
}

func (s Inventory) Ids() (capnp.DataList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.DataList{List: p.List()}, err
}

func (s Inventory) HasIds() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Inventory) SetIds(v capnp.DataList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewIds sets the ids field to a newly
// allocated capnp.DataList, preferring placement in s's segment.
func (s Inventory) NewIds(n int32) (capnp.DataList, error) {
	l, err := capnp.NewDataList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.DataList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Inventory_List is a list of Inventory.
type Inventory_List struct{ capnp.List }

// NewInventory creates a new list of Inventory.
func NewInventory_List(s *capnp.Segment, sz int32) (Inventory_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Inventory_List{l}, err
}

func (s Inventory_List) At(i int) Inventory { return Inventory{s.List.Struct(i)} }

func (s Inventory_List) Set(i int, v Inventory) error { return s.List.SetStruct(i, v.Struct) }

func (s Inventory_List) String() string {
	str, _ := text.MarshalList(0x894854b19b0bdf88, s.List)
	return str
}

// Inventory_Promise is a wrapper for a Inventory promised by a client call.
type Inventory_Promise struct{ *capnp.Pipeline }

func (p Inventory_Promise) Struct() (Inventory, error) {
	s, err := p.Pipeline.Struct()
	return Inventory{s}, err
}

const schema_9fd0f7eb12926b5d = "x\xda20`t`2d\x9d\xcf\xc1\xc0\x10\x98\xc2" +
	"\xca\xf6\xbf\xe3>\xf7\xec\x8d!\x1e\x9d\x0c\x82\x02\x8c\xff" +
	"c\xb3'\x09\xbd\xfe~a>\x03+#;\x03\x83\xb0" +
	")\xcb%aG\x16\x10\xcb\x96\xc5\x9e\xe1?\x03\xe7\xff" +
	"\xcc\xbc\xb2\xd4\xbc\x92\xfc\"\xa6J\xbd\xe4\xc4\x82\xbc\x02" +
	"+O\xa8\x00ce\x00#c \x0b3\x0b\x03\x03\x0b" +
	"#\x03\x83 \xaf\x12\x03C \x073c\xa0\x0a\x13#" +
	"{fJ1#\x1f\x03c\x003##/\x03\x13\x88" +
	"\x09\x08\x00\x00\xff\xff\xa8\x9f\x1e\xf1"

func init() {
	schemas.Register(schema_9fd0f7eb12926b5d,
		0x894854b19b0bdf88)
}
