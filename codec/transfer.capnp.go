// Code generated by capnpc-go. DO NOT EDIT.

package codec

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Transfer struct{ capnp.Struct }

// Transfer_TypeID is the unique identifier for the type Transfer.
const Transfer_TypeID = 0xfebd493a48891da9

func NewTransfer(s *capnp.Segment) (Transfer, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Transfer{st}, err
}

func NewRootTransfer(s *capnp.Segment) (Transfer, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Transfer{st}, err
}

func ReadRootTransfer(msg *capnp.Message) (Transfer, error) {
	root, err := msg.RootPtr()
	return Transfer{root.Struct()}, err
}

func (s Transfer) String() string {
	str, _ := text.Marshal(0xfebd493a48891da9, s.Struct)
	return str
}

func (s Transfer) From() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Transfer) HasFrom() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Transfer) SetFrom(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Transfer) To() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s Transfer) HasTo() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Transfer) SetTo(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s Transfer) Amount() uint64 {
	return s.Struct.Uint64(0)
}

func (s Transfer) SetAmount(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Transfer_List is a list of Transfer.
type Transfer_List struct{ capnp.List }

// NewTransfer creates a new list of Transfer.
func NewTransfer_List(s *capnp.Segment, sz int32) (Transfer_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return Transfer_List{l}, err
}

func (s Transfer_List) At(i int) Transfer { return Transfer{s.List.Struct(i)} }

func (s Transfer_List) Set(i int, v Transfer) error { return s.List.SetStruct(i, v.Struct) }

func (s Transfer_List) String() string {
	str, _ := text.MarshalList(0xfebd493a48891da9, s.List)
	return str
}

// Transfer_Promise is a wrapper for a Transfer promised by a client call.
type Transfer_Promise struct{ *capnp.Pipeline }

func (p Transfer_Promise) Struct() (Transfer, error) {
	s, err := p.Pipeline.Struct()
	return Transfer{s}, err
}

const schema_b660749b49284997 = "x\xda4\xc8?J\xc5@\x14\x85\xf1s\xeeL\xd4\x80" +
	"!\x84\xa4\x12\xec\xc5B\xb4\xb00 \xa6P\xc8\x80B" +
	".d\x01\x065]\xfe\x10\xc7E\xb8\x02\x0b\x0bk+" +
	";;\x1b\x17\xe6H\xe0\xbd\xee\xf7}\xa7\x8e\x95\x9cE" +
	"\x1f{\x80>F;\xe1\xf3\xf0\xb5.\xdd\xcf\x1f4%" +
	"\xc3\x9b;r\xef\xfe\xfe\x1b\x91\xec\x02\xf9\xb9\xfd\xcd/" +
	"\xed\xaa\x0b\xfb\x85\x808\xf8\xa5\x1b\x9f\xfb\xa7EN\x1e" +
	"\xbay\x9c\xcbv\xd3hH\xdd7\x16\xb0\x04\xb2\x9bc" +
	"@+C\xbd\x15fd\xc1u\xba\x03@\xaf\x0d\xb5\x11" +
	"R\x0a\x0a\x90\xdd\x95\x80\xd6\x86\xda\x0a\xd3~\x99\x06&" +
	"\x10&\xa0\xf1\xd3\x96W\xdd0\xbd\x8c\x9e1\x841\xf8" +
	"\x1f\x00\x00\xff\xff\x01d%\xba"

func init() {
	schemas.Register(schema_b660749b49284997,
		0xfebd493a48891da9)
}
