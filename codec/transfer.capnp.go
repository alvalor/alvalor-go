// Code generated by capnpc-go. DO NOT EDIT.

package codec

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Transfer struct{ capnp.Struct }

// Transfer_TypeID is the unique identifier for the type Transfer.
const Transfer_TypeID = 0xfebd493a48891da9

func NewTransfer(s *capnp.Segment) (Transfer, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Transfer{st}, err
}

func NewRootTransfer(s *capnp.Segment) (Transfer, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Transfer{st}, err
}

func ReadRootTransfer(msg *capnp.Message) (Transfer, error) {
	root, err := msg.RootPtr()
	return Transfer{root.Struct()}, err
}

func (s Transfer) String() string {
	str, _ := text.Marshal(0xfebd493a48891da9, s.Struct)
	return str
}

func (s Transfer) From() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Transfer) HasFrom() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Transfer) SetFrom(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Transfer) To() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s Transfer) HasTo() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Transfer) SetTo(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s Transfer) Amount() uint64 {
	return s.Struct.Uint64(0)
}

func (s Transfer) SetAmount(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Transfer_List is a list of Transfer.
type Transfer_List struct{ capnp.List }

// NewTransfer creates a new list of Transfer.
func NewTransfer_List(s *capnp.Segment, sz int32) (Transfer_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return Transfer_List{l}, err
}

func (s Transfer_List) At(i int) Transfer { return Transfer{s.List.Struct(i)} }

func (s Transfer_List) Set(i int, v Transfer) error { return s.List.SetStruct(i, v.Struct) }

func (s Transfer_List) String() string {
	str, _ := text.MarshalList(0xfebd493a48891da9, s.List)
	return str
}

// Transfer_Promise is a wrapper for a Transfer promised by a client call.
type Transfer_Promise struct{ *capnp.Pipeline }

func (p Transfer_Promise) Struct() (Transfer, error) {
	s, err := p.Pipeline.Struct()
	return Transfer{s}, err
}

const schema_b660749b49284997 = "x\xda4\xc8\xbfJ\x85`\x18\xc7\xf1\xdf\xefy\x8e\xe7" +
	"p \x11\xd1)h\x8f\xa0\xc8\xa1\xc5%\x87\x02_0" +
	"\xf0\x01/ \x89\xdc\xfc\x83\xbd]DScCW\xd0" +
	"\xd4\xd6\xd6\xd2\xd2]e\x08\xb5}\xbe\xdf\xf3\x1d\x0b\xc9" +
	"\x82\xe7-`U\xb0]\xde\x8e\x9e\xca\xdc}\xfe\xc0\"" +
	"ryq\xc7\xee\xd5\xdf~ \x90\x1d\x90\x9c\xeaWr" +
	"\xa1\xab2}\xc7\xf7\xe2\xe7vx\xe8\xeeg9\xbbk" +
	"\xa7a\xca\x9b\xbfFM\xda\x81n\x80\x0d\x81\xf8\xfa\x04" +
	"\xb0Bi\x950&S\xae\xd3\x1d\x02v\xa5\xb4ZH" +
	"I)@|\x93\x03V*\xad\x11F\xdd<\xf6\x0c!" +
	"\x0cA\xf5\xe3?/\xdb~|\x1c<\xf7\x10\xee\xc1\xdf" +
	"\x00\x00\x00\xff\xffb~$\xf2"

func init() {
	schemas.Register(schema_b660749b49284997,
		0xfebd493a48891da9)
}
