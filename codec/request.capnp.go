// Code generated by capnpc-go. DO NOT EDIT.

package codec

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Request struct{ capnp.Struct }

// Request_TypeID is the unique identifier for the type Request.
const Request_TypeID = 0xe8d311873fc93b93

func NewRequest(s *capnp.Segment) (Request, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Request{st}, err
}

func NewRootRequest(s *capnp.Segment) (Request, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Request{st}, err
}

func ReadRootRequest(msg *capnp.Message) (Request, error) {
	root, err := msg.RootPtr()
	return Request{root.Struct()}, err
}

func (s Request) String() string {
	str, _ := text.Marshal(0xe8d311873fc93b93, s.Struct)
	return str
}

func (s Request) Ids() (capnp.DataList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.DataList{List: p.List()}, err
}

func (s Request) HasIds() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Request) SetIds(v capnp.DataList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewIds sets the ids field to a newly
// allocated capnp.DataList, preferring placement in s's segment.
func (s Request) NewIds(n int32) (capnp.DataList, error) {
	l, err := capnp.NewDataList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.DataList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Request_List is a list of Request.
type Request_List struct{ capnp.List }

// NewRequest creates a new list of Request.
func NewRequest_List(s *capnp.Segment, sz int32) (Request_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Request_List{l}, err
}

func (s Request_List) At(i int) Request { return Request{s.List.Struct(i)} }

func (s Request_List) Set(i int, v Request) error { return s.List.SetStruct(i, v.Struct) }

func (s Request_List) String() string {
	str, _ := text.MarshalList(0xe8d311873fc93b93, s.List)
	return str
}

// Request_Promise is a wrapper for a Request promised by a client call.
type Request_Promise struct{ *capnp.Pipeline }

func (p Request_Promise) Struct() (Request, error) {
	s, err := p.Pipeline.Struct()
	return Request{s}, err
}

const schema_88b5d31dcdf19e4d = "x\xda2\xd0gt`2d\x9d\xcf\xc1\xc0\x10\x98\xc2" +
	"\xca\xf6\x7f\xb2\xf5I\xfbv\xc1\xcb/\x18\x04\xf9\x18\xff" +
	"\xfb\xce\xfbxV\xf6\xf2\xd6\x0e\x06VFv\x06\x06a" +
	"S\x96M\xc2\xb6, \x96%\x8b=\xc3\x7f\x06\xce\xff" +
	"E\xa9\x85\xa5\xa9\xc5%z\x8c\xc9\x89\x05y\x05VA" +
	"\xa9\xf2`~\x00#c \x0b3\x0b\x03\x03\x0b#\x03" +
	"\x83 \xaf\x12\x03C \x073c\xa0\x0a\x13#{f" +
	"J1#\x1f\x03c\x003##/\x03\x13\x88\x09\x08" +
	"\x00\x00\xff\xff\x06\xfb\x1dx"

func init() {
	schemas.Register(schema_88b5d31dcdf19e4d,
		0xe8d311873fc93b93)
}
